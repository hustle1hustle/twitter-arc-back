const https = require('https')

// TweetScout API
class TweetScoutAPI {
  constructor(apiKey) {
    this.apiKey = apiKey
    this.baseUrl = 'api.tweetscout.io'
  }

  async makeRequest(path) {
    return new Promise((resolve, reject) => {
      const options = {
        hostname: this.baseUrl,
        path: `/v2${path}`,
        method: 'GET',
        headers: {
          'ApiKey': this.apiKey,
          'Content-Type': 'application/json',
        },
      }

      const req = https.request(options, (res) => {
        let data = ''
        res.on('data', (chunk) => {
          data += chunk
        })
        res.on('end', () => {
          try {
            const jsonData = JSON.parse(data)
            resolve(jsonData)
          } catch (error) {
            reject(new Error(`Invalid JSON response: ${data}`))
          }
        })
      })

      req.on('error', (error) => {
        reject(error)
      })

      req.end()
    })
  }

  async getUser(handle) {
    try {
      console.log(`üîç TweetScout: –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${handle}...`)
      return await this.makeRequest(`/info/${handle}`)
    } catch (error) {
      throw new Error(`TweetScout API error for user ${handle}: ${error.message}`)
    }
  }

  async getUserScore(handle) {
    try {
      console.log(`üîç TweetScout: –ü–æ–ª—É—á–∞—é —Ä–µ–π—Ç–∏–Ω–≥ @${handle}...`)
      return await this.makeRequest(`/score/${handle}`)
    } catch (error) {
      console.log(`‚ö†Ô∏è TweetScout score not available for @${handle}`)
      return null
    }
  }
}

async function detailedAnalysis0xmert() {
  const handle = '0xmert_'
  
  console.log('üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó @0xmert_')
  console.log('='.repeat(80))
  console.log('üìä TweetScout Data Analysis')
  console.log('='.repeat(80))
  
  try {
    const tweetscout = new TweetScoutAPI(process.env.TWEETSCOUT_KEY)
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await tweetscout.getUser(handle)
    const score = await tweetscout.getUserScore(handle)
    
    console.log('\nüìã –°–´–†–´–ï –î–ê–ù–ù–´–ï TWEETSCOUT:')
    console.log('='.repeat(80))
    console.log('üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:')
    console.log(JSON.stringify(user, null, 2))
    
    console.log('\nüéØ TweetScout Score:')
    console.log(JSON.stringify(score, null, 2))
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('\nüìä –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–•:')
    console.log('='.repeat(80))
    
    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('\nüë§ –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:')
    console.log('‚îÄ'.repeat(50))
    console.log(`üìù –ò–º—è: ${user.name}`)
    console.log(`üè∑Ô∏è  Username: @${user.screen_name}`)
    console.log(`üÜî ID: ${user.id}`)
    console.log(`üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: ${user.description}`)
    console.log(`üîó URL: ${user.url || '–ù–µ —É–∫–∞–∑–∞–Ω'}`)
    console.log(`üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${user.register_date}`)
    console.log(`‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${user.verified ? '–î–ê' : '–ù–ï–¢'}`)
    console.log(`üí¨ –ú–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å DM: ${user.can_dm ? '–î–ê' : '–ù–ï–¢'}`)
    
    // –ú–µ–¥–∏–∞
    console.log('\nüñºÔ∏è –ú–ï–î–ò–ê:')
    console.log('‚îÄ'.repeat(50))
    console.log(`üë§ –ê–≤–∞—Ç–∞—Ä: ${user.avatar}`)
    console.log(`üñºÔ∏è  –ë–∞–Ω–Ω–µ—Ä: ${user.banner}`)
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
    console.log('‚îÄ'.repeat(50))
    console.log(`üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${user.followers_count.toLocaleString()}`)
    console.log(`üë§ –ü–æ–¥–ø–∏—Å–∫–∏: ${user.friends_count.toLocaleString()}`)
    console.log(`üê¶ –¢–≤–∏—Ç—ã: ${user.tweets_count.toLocaleString()}`)
    
    // –í—ã—á–∏—Å–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    const followerCount = user.followers_count
    const followingCount = user.friends_count
    const tweetCount = user.tweets_count
    const isVerified = user.verified
    const createdAt = user.register_date
    
    // –í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞
    const createdDate = new Date(createdAt)
    const now = new Date()
    const accountAgeDays = Math.floor((now - createdDate) / (1000 * 60 * 60 * 24))
    const accountAgeYears = (accountAgeDays / 365).toFixed(1)
    
    console.log('\n‚è∞ –í–û–ó–†–ê–°–¢ –ê–ö–ö–ê–£–ù–¢–ê:')
    console.log('‚îÄ'.repeat(50))
    console.log(`üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${createdAt}`)
    console.log(`üìä –î–Ω–µ–π —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${accountAgeDays}`)
    console.log(`üìä –õ–µ—Ç —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${accountAgeYears}`)
    
    // –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è
    console.log('\nüìä –°–û–û–¢–ù–û–®–ï–ù–ò–Ø:')
    console.log('‚îÄ'.repeat(50))
    const followerToFollowingRatio = followingCount > 0 ? followerCount / followingCount : 0
    const tweetToFollowerRatio = followerCount > 0 ? tweetCount / followerCount : 0
    const tweetToFollowingRatio = followingCount > 0 ? tweetCount / followingCount : 0
    
    console.log(`üìà –ü–æ–¥–ø–∏—Å—á–∏–∫–∏/–ü–æ–¥–ø–∏—Å–∫–∏: ${followerToFollowingRatio.toFixed(2)}`)
    console.log(`üìä –¢–≤–∏—Ç—ã/–ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${tweetToFollowerRatio.toFixed(3)}`)
    console.log(`üìä –¢–≤–∏—Ç—ã/–ü–æ–¥–ø–∏—Å–∫–∏: ${tweetToFollowingRatio.toFixed(2)}`)
    
    // TweetScout Score –∞–Ω–∞–ª–∏–∑
    console.log('\nüéØ TWEETSCOUT SCORE –ê–ù–ê–õ–ò–ó:')
    console.log('‚îÄ'.repeat(50))
    if (score) {
      console.log(`üèÜ TweetScout Score: ${score.score}`)
      console.log(`üìä –û—Ü–µ–Ω–∫–∞: ${getScoreDescription(score.score)}`)
    } else {
      console.log(`‚ö†Ô∏è TweetScout Score –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`)
    }
    
    // –†–µ–ø—É—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    console.log('\n‚≠ê –†–ï–ü–£–¢–ê–¶–ò–û–ù–ù–´–ô –ê–ù–ê–õ–ò–ó:')
    console.log('‚îÄ'.repeat(50))
    
    // Base score from follower count (logarithmic scale)
    const baseScore = Math.log10(followerCount + 1) * 100
    const ageBonus = Math.min(accountAgeDays / 365, 50)
    const verificationBonus = isVerified ? 50 : 0
    const engagementRate = followerCount > 0 ? (tweetCount / followerCount) * 1000 : 0
    const engagementBonus = Math.min(engagementRate, 50)
    const tweetScoutBonus = score ? Math.round(score.score) : 0
    
    const finalScore = Math.round(baseScore + ageBonus + verificationBonus + tweetScoutBonus + engagementBonus)
    const qualityScore = finalScore * (0.5 + ((score?.score || 0) / 200))
    
    console.log(`üìä –ë–∞–∑–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ (–ø–æ–¥–ø–∏—Å—á–∏–∫–∏): ${Math.round(baseScore)}`)
    console.log(`üìä –ë–æ–Ω—É—Å –∑–∞ –≤–æ–∑—Ä–∞—Å—Ç: ${Math.round(ageBonus)}`)
    console.log(`üìä –ë–æ–Ω—É—Å –∑–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é: ${verificationBonus}`)
    console.log(`üìä –ë–æ–Ω—É—Å –∑–∞ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: ${Math.round(engagementBonus)}`)
    console.log(`üìä TweetScout –±–æ–Ω—É—Å: ${tweetScoutBonus}`)
    console.log(`üèÜ –ò–¢–û–ì–û–í–ê–Ø –†–ï–ü–£–¢–ê–¶–ò–Ø: ${finalScore}`)
    console.log(`üéØ –ö–ê–ß–ï–°–¢–í–ï–ù–ù–ê–Ø –û–¶–ï–ù–ö–ê: ${Math.round(qualityScore)}`)
    
    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è
    console.log('\nüè∑Ô∏è –ö–ê–¢–ï–ì–û–†–ò–ó–ê–¶–ò–Ø:')
    console.log('‚îÄ'.repeat(50))
    console.log(`üëë –¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞: ${getAccountType(followerCount, isVerified, accountAgeDays)}`)
    console.log(`üìä –£—Ä–æ–≤–µ–Ω—å –≤–ª–∏—è–Ω–∏—è: ${getInfluenceLevel(followerCount)}`)
    console.log(`üìà –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${getActivityLevel(tweetCount, accountAgeDays)}`)
    console.log(`üéØ –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${getContentQuality(score?.score || 0)}`)
    
    // –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
    console.log('\nüí™ –°–ò–õ–¨–ù–´–ï –°–¢–û–†–û–ù–´:')
    console.log('‚îÄ'.repeat(50))
    const strengths = []
    if (isVerified) strengths.push('‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç')
    if (accountAgeDays > 365) strengths.push('‚úÖ –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç')
    if (followerCount > 10000) strengths.push('‚úÖ –ö—Ä—É–ø–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è')
    if (followerToFollowingRatio > 2) strengths.push('‚úÖ –•–æ—Ä–æ—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤/–ø–æ–¥–ø–∏—Å–æ–∫')
    if (score && score.score > 100) strengths.push(`‚úÖ –í—ã—Å–æ–∫–∏–π TweetScout —Ä–µ–π—Ç–∏–Ω–≥ (${Math.round(score.score)})`)
    if (tweetCount > 1000) strengths.push('‚úÖ –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å')
    
    strengths.forEach(strength => console.log(strength))
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:')
    console.log('‚îÄ'.repeat(50))
    const recommendations = []
    
    if (followerToFollowingRatio < 0.5) {
      recommendations.push('üí° –°—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞')
    }
    if (tweetToFollowerRatio < 0.1) {
      recommendations.push('üí° –£–≤–µ–ª–∏—á–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É —Ç–≤–∏—Ç–æ–≤')
    }
    if (score && score.score < 100) {
      recommendations.push('üí° –†–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º TweetScout —Ä–µ–π—Ç–∏–Ω–≥–∞')
    }
    
    if (recommendations.length === 0) {
      recommendations.push('üéâ –û—Ç–ª–∏—á–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ')
    }
    
    recommendations.forEach(rec => console.log(rec))
    
    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏
    console.log('\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –° –î–†–£–ì–ò–ú–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò:')
    console.log('‚îÄ'.repeat(50))
    console.log(`üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${followerCount.toLocaleString()} (${getPercentile(followerCount, [67392, 33419, 248751])}%ile)`)
    console.log(`üê¶ –¢–≤–∏—Ç—ã: ${tweetCount.toLocaleString()} (${getPercentile(tweetCount, [1686, 16443, 59057])}%ile)`)
    console.log(`üìä TweetScout: ${Math.round(score?.score || 0)} (${getPercentile(score?.score || 0, [343, 1304, 2577])}%ile)`)
    
    console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:')
    console.log('‚îÄ'.repeat(50))
    console.log('@0xmert_ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:')
    console.log('‚Ä¢ –û–¥–∏–Ω –∏–∑ –∫—Ä—É–ø–Ω–µ–π—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–π –≥—Ä—É–ø–ø–µ')
    console.log('‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π TweetScout —Ä–µ–π—Ç–∏–Ω–≥')
    console.log('‚Ä¢ –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ')
    console.log('‚Ä¢ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç—å')
    console.log('‚Ä¢ –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ:', error.message)
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getScoreDescription(score) {
  if (score >= 2000) return '–≠–õ–ò–¢–ù–´–ô'
  if (score >= 1000) return '–û–¢–õ–ò–ß–ù–´–ô'
  if (score >= 500) return '–•–û–†–û–®–ò–ô'
  if (score >= 100) return '–°–†–ï–î–ù–ò–ô'
  return '–ù–ò–ó–ö–ò–ô'
}

function getAccountType(followers, verified, age) {
  if (verified && followers > 50000) return 'CELEBRITY'
  if (verified && followers > 10000) return 'INFLUENCER'
  if (age > 365 && followers > 5000) return 'ESTABLISHED'
  if (age < 30) return 'NEW'
  return 'REGULAR'
}

function getInfluenceLevel(followers) {
  if (followers >= 100000) return 'MEGA INFLUENCER'
  if (followers >= 50000) return 'MACRO INFLUENCER'
  if (followers >= 10000) return 'MICRO INFLUENCER'
  if (followers >= 1000) return 'NANO INFLUENCER'
  return 'REGULAR USER'
}

function getActivityLevel(tweets, age) {
  const tweetsPerDay = tweets / age
  if (tweetsPerDay >= 10) return '–û–ß–ï–ù–¨ –í–´–°–û–ö–ê–Ø'
  if (tweetsPerDay >= 5) return '–í–´–°–û–ö–ê–Ø'
  if (tweetsPerDay >= 2) return '–°–†–ï–î–ù–Ø–Ø'
  if (tweetsPerDay >= 1) return '–ù–ò–ó–ö–ê–Ø'
  return '–û–ß–ï–ù–¨ –ù–ò–ó–ö–ê–Ø'
}

function getContentQuality(score) {
  if (score >= 2000) return '–≠–õ–ò–¢–ù–´–ô'
  if (score >= 1000) return '–û–¢–õ–ò–ß–ù–´–ô'
  if (score >= 500) return '–•–û–†–û–®–ò–ô'
  if (score >= 100) return '–°–†–ï–î–ù–ò–ô'
  return '–ù–ò–ó–ö–ò–ô'
}

function getPercentile(value, values) {
  const sorted = values.sort((a, b) => a - b)
  const index = sorted.findIndex(v => v >= value)
  return Math.round(((index + 1) / sorted.length) * 100)
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
detailedAnalysis0xmert() 