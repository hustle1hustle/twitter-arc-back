const https = require('https');

const API_KEY = "3a40c7e0-66b8-4686-81eb-6bdccdbc3797";

async function makeRequest(path) {
  return new Promise((resolve, reject) => {
    const options = {
      hostname: 'api.tweetscout.io',
      path: path,
      method: 'GET',
      headers: {
        'ApiKey': API_KEY,
        'Content-Type': 'application/json',
      },
    };

    const req = https.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => data += chunk);
      res.on('end', () => {
        try {
          const result = JSON.parse(data);
          resolve({ status: res.statusCode, data: result });
        } catch (e) {
          resolve({ status: res.statusCode, data: data, error: true });
        }
      });
    });

    req.on('error', reject);
    req.end();
  });
}

// –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ TweetScout API v2
const tsUser = (h) => makeRequest(`/v2/info/${h}`);
const tsTopFollowers = (h) => makeRequest(`/v2/top_followers/${h}`); // –ü–†–ê–í–ò–õ–¨–ù–´–ô ENDPOINT!
const tsScore = (h) => makeRequest(`/v2/score/${h}`);

function computeReputation(user, topFollowers, score) {
  const followers = user.data.followers_count || 0;
  
  // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ top followers —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
  let topFollowersList = [];
  let topFollowersCount = 0;
  
  if (topFollowers && topFollowers.data && topFollowers.data.top_followers) {
    topFollowersList = topFollowers.data.top_followers.slice(0, 5).map(f => `@${f.screen_name}`);
    topFollowersCount = topFollowersList.length;
  }
  
  // –í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –≥–æ–¥–∞—Ö
  const createdDate = new Date(user.data.register_date);
  const now = new Date();
  const ageYears = (now - createdDate) / (1000 * 60 * 60 * 24 * 365);

  const repScore = Math.round(
    0.35 * Math.log10(Math.max(followers, 1)) * 100 +
    0.25 * (topFollowersCount / Math.max(followers, 1)) * 1000 +
    0.15 * Math.sqrt(ageYears) * 10 +
    0.15 * (score.data.score || 0) + // –ò—Å–ø–æ–ª—å–∑—É–µ–º score –∏–∑ API
    0.10 * ((topFollowers.data?.avg_smart_score || 0) / 10)
  );

  return {
    rep: repScore,
    followers: followers,
    topFollowers: topFollowersList,
    topFollowersCount: topFollowersCount,
    avgSmartScore: topFollowers.data?.avg_smart_score || 0,
    medianFollowers: topFollowers.data?.median_followers || 0,
    accountAge: ageYears.toFixed(1),
    verified: user.data.verified,
    tweetsCount: user.data.tweets_count,
    score: score.data.score || 0,
    source: "tweetscout"
  };
}

function analyzeAccountType(followers, verified, ageYears) {
  if (followers >= 100000) return "Celebrity";
  if (followers >= 10000) return "Influencer";
  if (followers >= 1000) return "Regular";
  return "Newcomer";
}

function analyzeEngagementLevel(tweetsCount, followers, ageYears) {
  const tweetsPerYear = tweetsCount / ageYears;
  
  if (tweetsPerYear > 10000) return "Ultra Active";
  if (tweetsPerYear > 5000) return "Very Active";
  if (tweetsPerYear > 1000) return "Active";
  if (tweetsPerYear > 100) return "Moderate";
  return "Low Activity";
}

function getTopFollowersAnalysis(topFollowers) {
  if (!topFollowers || !topFollowers.data || !topFollowers.data.top_followers) {
    return {
      total: 0,
      verified: 0,
      verifiedRatio: "0.00",
      quality: "Low",
      error: "No data"
    };
  }
  
  const followers = topFollowers.data.top_followers;
  const verifiedCount = followers.filter(f => f.verified).length;
  const totalCount = followers.length;
  const verifiedRatio = totalCount > 0 ? verifiedCount / totalCount : 0;
  
  return {
    total: totalCount,
    verified: verifiedCount,
    verifiedRatio: verifiedRatio.toFixed(2),
    quality: verifiedRatio > 0.3 ? "High" : verifiedRatio > 0.1 ? "Medium" : "Low"
  };
}

function generateDetailedInsights(user, reputation, topFollowersAnalysis, score) {
  const insights = [];
  
  // –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
  if (user.data.followers_count >= 100000) {
    insights.push("üéØ –ú–∞—Å—Å–æ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è - –æ–¥–∏–Ω –∏–∑ –∫—Ä—É–ø–Ω–µ–π—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ —Å–≤–æ–µ–π –Ω–∏—à–µ");
  } else if (user.data.followers_count >= 10000) {
    insights.push("üìà –†–∞—Å—Ç—É—â–µ–µ –≤–ª–∏—è–Ω–∏–µ - –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è –∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è");
  } else if (user.data.followers_count >= 1000) {
    insights.push("üå± –†–∞–∑–≤–∏–≤–∞—é—â–∏–π—Å—è –∞–∫–∫–∞—É–Ω—Ç - —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –±–∞–∑–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤");
  }
  
  // –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  const tweetsPerYear = user.data.tweets_count / parseFloat(reputation.accountAge);
  if (tweetsPerYear > 10000) {
    insights.push("üî• –£–ª—å—Ç—Ä–∞-–∞–∫—Ç–∏–≤–Ω—ã–π - –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å");
  } else if (tweetsPerYear > 5000) {
    insights.push("‚ö° –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å - —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏");
  } else if (tweetsPerYear > 1000) {
    insights.push("üìù –ê–∫—Ç–∏–≤–Ω—ã–π - —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –≤ —Å–µ—Ç–∏");
  } else if (tweetsPerYear < 100) {
    insights.push("üìù –ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å - —Ä–µ–¥–∫–∏–µ, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏");
  }
  
  // –ê–Ω–∞–ª–∏–∑ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
  if (user.data.verified) {
    insights.push("‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–∞—è –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç—å –∏ –¥–æ–≤–µ—Ä–∏–µ");
  }
  
  // –ê–Ω–∞–ª–∏–∑ —Ç–æ–ø –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
  if (topFollowersAnalysis.error) {
    insights.push("üìä –¢–æ–ø –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - –≤–æ–∑–º–æ–∂–Ω–æ, –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –≤ –±–∞–∑–µ TweetScout");
  } else if (topFollowersAnalysis.quality === "High") {
    insights.push("üëë –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è - –º–Ω–æ–≥–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏ –≤–ª–∏—è—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤");
  } else if (topFollowersAnalysis.total > 0) {
    insights.push("üë• –¢–æ–ø –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ - –Ω–∞–ª–∏—á–∏–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏");
  } else {
    insights.push("üë• –ù–µ—Ç —Ç–æ–ø –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ - –≤–æ–∑–º–æ–∂–Ω–æ, –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è TweetScout");
  }
  
  // –ê–Ω–∞–ª–∏–∑ –≤–æ–∑—Ä–∞—Å—Ç–∞
  if (parseFloat(reputation.accountAge) > 5) {
    insights.push("üï∞Ô∏è –í–µ—Ç–µ—Ä–∞–Ω Twitter - –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å");
  } else if (parseFloat(reputation.accountAge) > 2) {
    insights.push("üìÖ –û–ø—ã—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –æ–ø—ã—Ç –≤ —Å–µ—Ç–∏");
  }
  
  // –ê–Ω–∞–ª–∏–∑ TweetScout Score
  if (score.data.score > 2000) {
    insights.push("üèÜ Elite TweetScout Score - –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –∞—É–¥–∏—Ç–æ—Ä–∏–∏");
  } else if (score.data.score > 1000) {
    insights.push("‚≠ê High TweetScout Score - –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç—å");
  } else if (score.data.score > 500) {
    insights.push("üìä Good TweetScout Score - —Ö–æ—Ä–æ—à–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–∞—á–µ—Å—Ç–≤–∞");
  }
  
  // –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Ç–≤–∏—Ç–æ–≤/–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
  const tweetsPerFollower = user.data.followers_count > 0 ? user.data.tweets_count / user.data.followers_count : 0;
  if (tweetsPerFollower > 0.5) {
    insights.push("üí¨ –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å - –º–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏");
  } else if (tweetsPerFollower < 0.1) {
    insights.push("üéØ –°–µ–ª–µ–∫—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - –∫–∞—á–µ—Å—Ç–≤–æ –≤–∞–∂–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞");
  }
  
  return insights;
}

async function sophireumCorrectAPIAnalysis() {
  const handle = 'sophireum';
  
  console.log('üîç –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ê–ù–ê–õ–ò–ó @sophireum');
  console.log('‚ïê'.repeat(80));
  console.log('üìä –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ API endpoints —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏');
  console.log('‚ïê'.repeat(80));

  try {
    console.log(`\nüìä –ê–ù–ê–õ–ò–ó @${handle}`);
    console.log('‚ïê'.repeat(60));

    console.log('üîç TweetScout: Fetching info for @sophireum...');
    console.log('üîç TweetScout: Fetching top followers for @sophireum...');
    console.log('üîç TweetScout: Fetching score for @sophireum...');

    const [user, topFollowers, score] = await Promise.all([
      tsUser(handle),
      tsTopFollowers(handle),
      tsScore(handle)
    ]);

    console.log(`\nüìä –°–¢–ê–¢–£–° API –ó–ê–ü–†–û–°–û–í:`);
    console.log('‚îÄ'.repeat(50));
    console.log(`‚úÖ User API: ${user.status === 200 ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê'}`);
    console.log(`‚úÖ Top Followers API: ${topFollowers.status === 200 ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê'}`);
    console.log(`‚úÖ Score API: ${score.status === 200 ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê'}`);

    if (user.status !== 200) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è @${handle}: User API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`);
      return;
    }

    const reputation = computeReputation(user, topFollowers, score);
    const accountType = analyzeAccountType(user.data.followers_count, user.data.verified, parseFloat(reputation.accountAge));
    const engagementLevel = analyzeEngagementLevel(user.data.tweets_count, user.data.followers_count, parseFloat(reputation.accountAge));
    const topFollowersAnalysis = getTopFollowersAnalysis(topFollowers);
    const insights = generateDetailedInsights(user, reputation, topFollowersAnalysis, score);

    console.log(`\nüë§ –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:`);
    console.log('‚îÄ'.repeat(50));
    console.log(`üìù –ò–º—è: ${user.data.name}`);
    console.log(`üè∑Ô∏è Username: @${user.data.screen_name}`);
    console.log(`üÜî ID: ${user.data.id}`);
    console.log(`üìÑ –û–ø–∏—Å–∞–Ω–∏–µ: ${user.data.description}`);
    console.log(`üîó URL: ${user.data.url || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log(`üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${user.data.register_date}`);
    console.log(`‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${user.data.verified ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`üí¨ –ú–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å DM: ${user.data.can_dm ? '–î–ê' : '–ù–ï–¢'}`);

    console.log(`\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`);
    console.log('‚îÄ'.repeat(50));
    console.log(`üèÜ REP Score: ${reputation.rep}`);
    console.log(`üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${reputation.followers?.toLocaleString()}`);
    console.log(`üë§ –ü–æ–¥–ø–∏—Å–∫–∏: ${user.data.friends_count?.toLocaleString()}`);
    console.log(`üê¶ –¢–≤–∏—Ç—ã: ${reputation.tweetsCount?.toLocaleString()}`);
    console.log(`üìÖ –í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞: ${reputation.accountAge} –ª–µ—Ç`);
    console.log(`üè∑Ô∏è –¢–∏–ø –∞–∫–∫–∞—É–Ω—Ç–∞: ${accountType}`);
    console.log(`‚ö° –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${engagementLevel}`);
    console.log(`üìà TweetScout Score: ${reputation.score?.toFixed(2)}`);

    console.log(`\nüìà –î–ï–¢–ê–õ–¨–ù–´–ï –ú–ï–¢–†–ò–ö–ò:`);
    console.log('‚îÄ'.repeat(50));
    const tweetsPerYear = user.data.tweets_count / parseFloat(reputation.accountAge);
    const tweetsPerFollower = user.data.followers_count > 0 ? user.data.tweets_count / user.data.followers_count : 0;
    const followerToFollowingRatio = user.data.friends_count > 0 ? user.data.followers_count / user.data.friends_count : 0;
    
    console.log(`üìä –¢–≤–∏—Ç–æ–≤ –≤ –≥–æ–¥: ${tweetsPerYear.toFixed(0)}`);
    console.log(`üìä –¢–≤–∏—Ç–æ–≤ –Ω–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞: ${tweetsPerFollower.toFixed(3)}`);
    console.log(`üìä –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤/–ø–æ–¥–ø–∏—Å–æ–∫: ${followerToFollowingRatio.toFixed(2)}`);

    console.log(`\nüìä –¢–û–ü –ü–û–î–ü–ò–°–ß–ò–ö–ò:`);
    console.log('‚îÄ'.repeat(50));
    console.log(`   –í—Å–µ–≥–æ: ${topFollowersAnalysis.total}`);
    console.log(`   –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: ${topFollowersAnalysis.verified}`);
    console.log(`   –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ: ${topFollowersAnalysis.verifiedRatio}`);
    console.log(`   –ö–∞—á–µ—Å—Ç–≤–æ: ${topFollowersAnalysis.quality}`);
    if (topFollowersAnalysis.error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞: ${topFollowersAnalysis.error}`);
    }
    
    if (reputation.topFollowers.length > 0) {
      console.log(`   –¢–æ–ø-5: ${reputation.topFollowers.join(', ')}`);
    }

    console.log(`\nüìà TWEETSCOUT –ú–ï–¢–†–ò–ö–ò:`);
    console.log('‚îÄ'.repeat(50));
    console.log(`   TweetScout Score: ${reputation.score?.toFixed(2)}`);
    console.log(`   Avg Smart Score: ${reputation.avgSmartScore?.toFixed(2)}`);
    console.log(`   Median Followers: ${reputation.medianFollowers?.toLocaleString()}`);

    console.log(`\nüí° –î–ï–¢–ê–õ–¨–ù–´–ï –ò–ù–°–ê–ô–¢–´:`);
    console.log('‚îÄ'.repeat(50));
    insights.forEach((insight, index) => {
      console.log(`   ${index + 1}. ${insight}`);
    });

    console.log(`\nüéØ –ö–ê–¢–ï–ì–û–†–ò–ó–ê–¶–ò–Ø:`);
    console.log('‚îÄ'.repeat(50));
    console.log(`   –ü–æ —Ä–∞–∑–º–µ—Ä—É –∞—É–¥–∏—Ç–æ—Ä–∏–∏: ${accountType}`);
    console.log(`   –ü–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${engagementLevel}`);
    console.log(`   –ü–æ TweetScout Score: ${reputation.score > 2000 ? 'Elite' : reputation.score > 1000 ? 'High' : reputation.score > 500 ? 'Good' : 'Standard'}`);
    console.log(`   –ü–æ –≤–æ–∑—Ä–∞—Å—Ç—É: ${parseFloat(reputation.accountAge) > 5 ? 'Veteran' : parseFloat(reputation.accountAge) > 2 ? 'Experienced' : 'New'}`);

    console.log(`\nüìä –†–ï–ü–£–¢–ê–¶–ò–û–ù–ù–´–ô –ê–ù–ê–õ–ò–ó:`);
    console.log('‚îÄ'.repeat(50));
    const baseScore = Math.log10(Math.max(user.data.followers_count, 1)) * 100;
    const ageBonus = Math.sqrt(parseFloat(reputation.accountAge)) * 10;
    const scoreBonus = reputation.score || 0;
    const smartBonus = reputation.avgSmartScore / 10;
    
    console.log(`   –ë–∞–∑–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ (–ø–æ–¥–ø–∏—Å—á–∏–∫–∏): ${Math.round(baseScore)}`);
    console.log(`   –ë–æ–Ω—É—Å –∑–∞ –≤–æ–∑—Ä–∞—Å—Ç: ${Math.round(ageBonus)}`);
    console.log(`   TweetScout Score –±–æ–Ω—É—Å: ${Math.round(scoreBonus)}`);
    console.log(`   Smart Score –±–æ–Ω—É—Å: ${Math.round(smartBonus)}`);
    console.log(`   üèÜ –ò–¢–û–ì–û–í–ê–Ø –†–ï–ü–£–¢–ê–¶–ò–Ø: ${reputation.rep}`);

    console.log(`\nüéâ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:`);
    console.log('‚îÄ'.repeat(50));
    console.log(`@${handle} –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç ${accountType.toLowerCase()} —Å—Ç–∞—Ç—É—Å —Å ${engagementLevel.toLowerCase()} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é.`);
    console.log(`–ê–∫–∫–∞—É–Ω—Ç –∏–º–µ–µ—Ç ${user.data.followers_count?.toLocaleString()} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏ ${user.data.tweets_count?.toLocaleString()} —Ç–≤–∏—Ç–æ–≤.`);
    console.log(`TweetScout Score —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${reputation.score?.toFixed(2)}, —á—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ ${reputation.score > 2000 ? '–∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ' : reputation.score > 1000 ? '–≤—ã—Å–æ–∫–æ–µ' : reputation.score > 500 ? '—Ö–æ—Ä–æ—à–µ–µ' : '—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ'} –∫–∞—á–µ—Å—Ç–≤–æ.`);
    console.log(`–û–±—â–∏–π REP Score: ${reputation.rep} - ${reputation.rep > 500 ? '–æ—Ç–ª–∏—á–Ω—ã–π' : reputation.rep > 300 ? '—Ö–æ—Ä–æ—à–∏–π' : reputation.rep > 200 ? '—Å—Ä–µ–¥–Ω–∏–π' : '–±–∞–∑–æ–≤—ã–π'} —É—Ä–æ–≤–µ–Ω—å —Ä–µ–ø—É—Ç–∞—Ü–∏–∏.`);

    console.log(`\n‚úÖ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–´ –ü–†–ê–í–ò–õ–¨–ù–´–ï API ENDPOINTS:`);
    console.log('‚îÄ'.repeat(50));
    console.log(`   ‚úÖ /v2/info/{handle} - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ`);
    console.log(`   ‚úÖ /v2/top_followers/{handle} - —Ç–æ–ø –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ (—Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏)`);
    console.log(`   ‚úÖ /v2/score/{handle} - TweetScout Score`);

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ @${handle}:`, error.message);
  }
}

sophireumCorrectAPIAnalysis().catch(console.error); 